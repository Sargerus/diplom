@model WebApplication1.Models.BacklogTask

@{
    ViewBag.Title = "Create";
}

@section Body{

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BacklogTask</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CreatedBy)
    @if (Model.Backlog != 0)
    {
    @Html.HiddenFor(model => model.Backlog)
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, "CreatedBy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CreatedBy", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoursEstimated, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoursEstimated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HoursEstimated, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoursDone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoursDone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HoursDone, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (ViewBag.BacklogDesc != String.Empty)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Backlog, "Backlog", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Backlog == 0)
                {
                    @Html.DropDownListFor(model => model.Backlog, (IEnumerable<SelectListItem>)ViewBag.Backlog, "")
                }
                else
                {
                    @Html.TextBox("tx1", (String)ViewBag.BacklogDesc, new { @readonly = "readonly" })
                }

                @Html.ValidationMessageFor(model => model.Backlog, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {

        <div class="form-group">
            @Html.LabelFor(model => model.Backlog, "Backlog", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Backlog", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Backlog, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

    }
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
