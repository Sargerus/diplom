@model IEnumerable<WebApplication1.ViewModel.ProjectTaskViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Body {

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
    {
        @Html.AntiForgeryToken()
    }

    <div class="task-container-pk header">
        <div class="header-item">@ViewBag.ViewedUser</div>
        <div class="header-item">@ViewBag.ProjectName</div>
        <div class="btn btn-success header-item div-text-center-pk">Week angle</div>
    </div>

    <div style="padding-top:.1em;padding-bottom:.1em;border:1px solid;border-color:rgba(0, 0, 0, 0.36)">
        <div class="row col-mar">
            <div class="col-sm-8 text-left">Desription</div>
            <div class="col-sm-2 text-left">End Date</div>
            <div class="col-sm-2 text-left">Progress</div>
        </div>

        <div class="div-hr"></div>
        @foreach (var task in Model)
        {
            string randomId = Html.Action("RandomNumber").ToString();
            string onclick = string.Empty;
            if (task.colorIndicator.Equals("done-color") && Html.Action("CanAddTask", new { projectid = ViewBag.ProjectId, foruser = ViewBag.ViewedUser }).ToString().Equals("1")) { onclick = "onClick = \"RemoveDoneTask(\"" + task.projectTask.TaskKey + "\",\"" + task.projectTask.ProjectKey + "\",\"" + randomId + "\")\""; }
            else { onclick = string.Empty; randomId = ""; }

            <div class="row col-mar" id="@randomId">
                <div class="col-sm-8 text-left hover-element-pk">
                    <span class="@task.colorIndicator" onclick="@onclick"></span>
                    @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = ViewBag.ViewedUser }, "")
                </div>
                <div class="col-sm-2 text-justify">
                    @task.EndDate
                </div>
                <div class="progress col-sm-2">
                    @{ string progressValue = (task.TaskDoneFor * 100).ToString(); }
                    <div class="progress-bar progress-bar-striped" role="progressbar" style="width:@progressValue%" aria-valuenow="@progressValue" aria-valuemin="0" aria-valuemax="100">
                        <span>@task.projectTask.TaskDone / @task.projectTask.TaskEstimated</span>
                    </div>
                </div>
            </div>

        }

        @if (Html.Action("CanAddTask", new { projectid = ViewBag.ProjectId, foruser = ViewBag.ViewedUser }).ToString().Equals("1"))
        {

            <div class="text-center hover-element-pk">
                @Html.ActionLink("Add Task", "Create", new { projectid = ViewBag.ProjectId, vieweduser = ViewBag.ViewedUser }, new { @class = "btn btn-sm btn-danger" })
            </div>
        }


    </div>

    <script type="text/javascript" src="~/Scripts/ProjectTasksIndexBehaviour.js"></script>
}