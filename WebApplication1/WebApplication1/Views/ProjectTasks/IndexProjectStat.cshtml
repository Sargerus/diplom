@model ICollection<WebApplication1.ViewModel.ProjectTaskViewModel>

@{
    ViewBag.Title = "IndexProjectStat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Body{

    @{
        List<WebApplication1.ViewModel.ProjectTaskViewModel> doneTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();
        List<WebApplication1.ViewModel.ProjectTaskViewModel> processingTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();
        List<WebApplication1.ViewModel.ProjectTaskViewModel> outstandingTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();

        foreach (var g in Model)
        {
            if (g.colorIndicator.Equals("done-color"))
            {
                doneTasks.Add(g);
            }
            else if (g.colorIndicator.Equals("progress-color") || g.colorIndicator.Equals("havetime-color"))
            {
                processingTasks.Add(g);
            }
            else
            {
                outstandingTasks.Add(g);
            }
        }
    }
    @{int doneTasksCount = 0;
        int totalDoneHours = 0;
        int totalRequiredDoneHours = 0;

        int processingTasksCount = 0;
        int totalprocessingHours = 0;
        int totalRequiredprocessingHours = 0;

        int outstandingTasksCount = 0;
        int totaloutstandingHours = 0;
        int totalRequiredoutstandingHours = 0;
    }

    <div class="project-label-pk row" style="margin-left:0; margin-right:0;">
        <div class="col-sm-6 col-md-6">
            Statistic
        </div>
        <div class="col-sm-6 col-md-6 text-right" style="padding-right:0;">
            @Html.ActionLink("Back to project", "Details", "Projects", new { @id = ViewBag.projectid }, new { @class = "btn btn-success", @style = "border-radius:15px;" })
        </div>
    </div>

    <div class="row">
        <div class="col-xs-4">
            <div class="done-task-container">
                <div class="done-header text-center">Done</div>
                @foreach (var task in doneTasks)
                {
                    doneTasksCount += 1;
                    totalDoneHours += task.projectTask.TaskDone;
                    totalRequiredDoneHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line done-block">
                        @*<div class="col-sm-8" style="margin-left:-.3em;margin-right:-0.45em;">
                            @*<span class="@task.colorIndicator"></span>*@
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")</div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Assigned: @task.projectTask.UserAssigned
                            </div>
                            <div class="col-sm-4 text-center" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-xs-4">
            <div class="processing-task-container">
                <div class="processing-header text-center">In Process</div>
                @foreach (var task in processingTasks)
                {
                    processingTasksCount += 1;
                    totalprocessingHours += task.projectTask.TaskDone;
                    totalRequiredprocessingHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line progress-block">
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")</div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Assigned: @task.projectTask.UserAssigned
                            </div>
                            <div class="col-sm-4 text-center" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-xs-4">
            <div class="outstanding-task-container">
                <div class="outstanding-header text-center">Outstanding</div>
                @foreach (var task in outstandingTasks)
                {
                    outstandingTasksCount += 1;
                    totaloutstandingHours += task.projectTask.TaskDone;
                    totalRequiredoutstandingHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line outstanding-block">
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")</div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Assigned: @task.projectTask.UserAssigned
                            </div>
                            <div class="col-sm-4 text-center" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-xs-4">
            <hr />
            Tasks: @doneTasksCount<br />
            @*Total Completed: @totalDoneHours<br />*@
            Total Estimated: @totalRequiredDoneHours
        </div>
        <div class="col-xs-4">
            <hr />
            Tasks: @processingTasksCount<br />
            Total Completed: @totalprocessingHours<br />
            Total Estimated: @totalRequiredprocessingHours
        </div>
        <div class="col-xs-4">
            <hr />
            Tasks: @outstandingTasksCount<br />
            Total Completed: @totaloutstandingHours<br />
            Total Estimated: @totalRequiredoutstandingHours
        </div>
    </div>
}
