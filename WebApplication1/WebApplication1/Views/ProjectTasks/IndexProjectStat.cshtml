@model ICollection<WebApplication1.ViewModel.ProjectTaskViewModel>

@{
    ViewBag.Title = "IndexProjectStat";
    Layout = "~/Views/Shared/_LayoutTotalTasks.cshtml";
}

@section Body{
    <script type="text/javascript">
        $(function () { // will trigger when the document is ready
            $('.datepicker').datepicker(); //Initialise any date pickers
        });
    </script>
    @{
        List<WebApplication1.ViewModel.ProjectTaskViewModel> doneTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();
        List<WebApplication1.ViewModel.ProjectTaskViewModel> processingTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();
        List<WebApplication1.ViewModel.ProjectTaskViewModel> outstandingTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();
        List<WebApplication1.ViewModel.ProjectTaskViewModel> noneTasks = new List<WebApplication1.ViewModel.ProjectTaskViewModel>();

        foreach (var g in Model)
        {
            if (g.colorIndicator.Equals("done-color"))
            {
                doneTasks.Add(g);
            }
            else if (g.colorIndicator.Equals("progress-color") || g.colorIndicator.Equals("havetime-color"))
            {
                processingTasks.Add(g);
            }
            else if (g.colorIndicator.Equals("outstanding-color"))
            {
                outstandingTasks.Add(g);
            }
            else
            {
                noneTasks.Add(g);
            }
        }
    }

    @{ int doneTasksCount = 0;
        int totalDoneHours = 0;
        int totalRequiredDoneHours = 0;

        int processingTasksCount = 0;
        int totalprocessingHours = 0;
        int totalRequiredprocessingHours = 0;

        int outstandingTasksCount = 0;
        int totaloutstandingHours = 0;
        int totalRequiredoutstandingHours = 0;
    }

    <div class="text-left">
        @Html.ActionLink("Back to project", "Details", "Projects", new { @id = ViewBag.projectid }, new { @class = "btn btn-success", @style = "border-radius:15px;" })
    </div>
    <div class="project-label-pk row" style="margin-left:0; margin-right:0;">
        <div class="col-sm-6 col-md-6">
            Statistic
        </div>
    </div>

    <div class="row">
        <div class="col-xs-3">
            <div class="done-task-container">
                <div class="done-header text-center">Done</div>
                @foreach (var task in doneTasks)
                {
                    doneTasksCount += 1;
                    totalDoneHours += task.projectTask.TaskDone;
                    totalRequiredDoneHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line done-block">
                        @*<div class="col-sm-8" style="margin-left:-.3em;margin-right:-0.45em;">
                            @*<span class="@task.colorIndicator"></span>*@
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">
                            Assigned: @Html.ActionLink(task.projectTask.UserAssigned, "Index", new { projectId = task.projectTask.ProjectKey, user = task.projectTask.UserAssigned }, new { style = "text-decoration:none;color:black;" })
                        </div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")
                            </div>
                            <div class="col-sm-4 text-right" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-xs-3">
            <div class="none-task-container">
                <div class="none-header text-center">None</div>
                @foreach (var task in noneTasks)
                {
                    //processingTasksCount += 1;
                    //totalprocessingHours += task.projectTask.TaskDone;
                    //totalRequiredprocessingHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line none-block">
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">

                        </div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")
                            </div>
                            <div class="col-sm-4 text-right" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-xs-3">
            <div class="processing-task-container">
                <div class="processing-header text-center">Processing</div>
                @foreach (var task in processingTasks)
                {
                    processingTasksCount += 1;
                    totalprocessingHours += task.projectTask.TaskDone;
                    totalRequiredprocessingHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line outstanding-block">
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">
                            Assigned: @Html.ActionLink(task.projectTask.UserAssigned, "Index", new { projectId = task.projectTask.ProjectKey, user = task.projectTask.UserAssigned }, new { style = "text-decoration:none;color:black;" })
                        </div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")
                            </div>
                            <div class="col-sm-4 text-right" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-xs-3">
            <div class="none-task-container">
                <div class="outstanding-header text-center">Outstanding</div>
                @foreach (var task in outstandingTasks)
                {
                    outstandingTasksCount += 1;
                    totaloutstandingHours += task.projectTask.TaskDone;
                    totalRequiredoutstandingHours += task.projectTask.TaskEstimated;
                    <div class="projecttask-line outstanding-block">
                        <div style="padding-left:.2em;font-size:110%;">
                            @Html.ActionLink(@task.projectTask.ShortText, "Details", new { taskid = task.projectTask.TaskKey, projectid = task.projectTask.ProjectKey, taskofuser = task.projectTask.UserAssigned }, "")<br />
                        </div>

                        <div style="margin-left:.2em;margin-top:3em;font-size:85%;">
                            Assigned: @Html.ActionLink(task.projectTask.UserAssigned, "Index", new { projectId = task.projectTask.ProjectKey, user = task.projectTask.UserAssigned }, new { style = "text-decoration:none;color:black;" })
                        </div>
                        <div class="row" style="font-size:85%;">

                            <div class="col-sm-8 text-left">
                                Required End Date: @task.projectTask.RequiredEndDate.ToString("dd.MM.yyyy")
                            </div>
                            <div class="col-sm-4 text-right" style="padding-left:.1em;">
                                @task.projectTask.TaskDone / @task.projectTask.TaskEstimated h
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    @*<div class="row">
            <div class="col-xs-4">
                <hr />
                Tasks: @doneTasksCount<br />
                @*Total Completed: @totalDoneHours<br />
                Total Estimated: @totalRequiredDoneHours
            </div>
            <div class="col-xs-4">
                <hr />
                Tasks: @processingTasksCount<br />
                Total Completed: @totalprocessingHours<br />
                Total Estimated: @totalRequiredprocessingHours
            </div>
            <div class="col-xs-4">
                <hr />
                Tasks: @outstandingTasksCount<br />
                Total Completed: @totaloutstandingHours<br />
                Total Estimated: @totalRequiredoutstandingHours
            </div>
        </div>*@

    <div data-toggle="modal" data-target="#modalCreateTaskForm" class="corner-button"><i class="fa fa-plus" style="font-weight:bold;"></i></div>

    <div class="modal fade" id="modalCreateTaskForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title w-100 font-weight-bold">Create new task</h4>
                </div>
                <div class="modal-body mx-3">

                    <div class="projecttask-line">
                        <div class="row">
                            <div class="col-sm-6">
                                <label data-error="wrong" data-success="right">Short text<sup class="required">*</sup></label>
                                <input type="text" id="short-text" class="form-control" placeholder="Short text..." />
                            </div>
                            <div class="col-sm-6">
                                <label data-error="wrong" data-success="right">Task Estimated<sup class="required">*</sup></label><br />
                                <input type="number" class="form-control" id="task-estimated" placeholder="8" />
                            </div>
                        </div>
                    </div>

                    <div class="projecttask-line">
                        <div class="row">
                            <div class="col-sm-6"><b>Start Date<sup class="required">*</sup></b> <input type="text" class="datepicker form-control" id="start-date" /></div>
                            <div class="col-sm-6"><b>End Date</b><input type="text" class="datepicker form-control" id="end-date" /></div>
                        </div>
                    </div>

                    <div class="projecttask-line" style="margin-left:.3em;">
                        <label data-error="wrong" data-success="right">Description</label><br />
                        <textarea class="form-control" id="description" placeholder="Enter description"></textarea>
                    </div>

                    <div class="projecttask-line">
                        <label data-error="wrong" data-success="right">User Assigned</label>
                        @Html.DropDownList("UsersToAssign", null, htmlAttributes: new { @class = "form-control", id = "userstoassignndropdown" })
                    </div>

                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-default" onclick="CreateTask();">Create</button>
                </div>

            </div>
        </div>
    </div>

    <script>

        function CreateTask() {
            
            let task = {
                ProjectKey: @ViewBag.projectid,
                ShortText: $("#short-text").val(),
                Description: $("#description").val(),
                RequiredStartDate: $("#start-date").val(),
                RequiredEndDate: $("#end-date").val(),
                TaskEstimated: $("#task-estimated").val(),
                UserAssigned: $("#userstoassignndropdown").children("option:selected").val(),
                AssignedBy: "@Utility.User",
            }
                $.post({
                    url: "/ProjectTasks/Create",
                    contentType: "application/json",
                    data: JSON.stringify(task),
                    success: function () { location.reload(); },
                    error: function (data) { alert("User" + data.User + " was not reassigned to new team lead. Please try again"); },
                    dataType: "json"
                })
            @*$.post({
                url: "/Account/ReassignUser",
                data: { TeamLead: newteamlead, user: nameofusertoreassign, projectid: @Model.project.ProjectId },
                success: function () { location.reload(); },
                error: function (data) { alert("User" + data.User + "was not reassigned to new team lead. Please try again"); },
                dataType: "json"
            });*@
        }
    </script>
}
