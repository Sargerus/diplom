@model WebApplication1.ViewModel.ProjectViewModel

@{
    ViewBag.Title = "Details";
}

@section Body{
    @*<div class="row">
        @*  *@
    @*<div class="col-sm-2 col-sm-push-10 col-xs-3 col-xs-push-9">
                @Html.ActionLink("My tasks", "Index", "ProjectTasks", new { projectid = Model.project.ProjectId, user = @Html.Action("GetUser", new { projectid = Model.project.ProjectId }) }, new { @class = "btn btn-success" })
            </div>
        </div>*@
    <div>
        <div class="project-label-pk">
            @Html.DisplayFor(model => Model.project.ProjectDescription)
        </div>
        <div class="row">
            @if (Html.Action("CanManageProject", new { projectid = Model.project.ProjectId }).ToString().Equals("1"))
            {
                <div class=" col-xs-9 col-xs-push-3 col-md-5 col-md-push-7">
                    @Html.ActionLink("Stats", "IndexProjectStat", "ProjectTasks", new { @id = Model.project.ProjectId }, new { @class = "btn btn-warning", @style = "border-radius:15px;" })
                    @Html.ActionLink("My tasks", "Index", "ProjectTasks", new { projectid = Model.project.ProjectId, user = @Html.Action("GetUser", new { projectid = Model.project.ProjectId }) }, new { @class = "btn btn-success", @style = "border-radius:15px;" })
                    @Html.ActionLink("Change", "Edit", new { @id = Model.project.ProjectId }, new { @class = "btn btn-warning", @style = "border-radius:15px;" })
                    @Html.ActionLink("Delete", "Delete", new { @id = Model.project.ProjectId }, new { @class = "btn btn-danger", @style = "border-radius:15px;" })
                </div>
            }
            else
            {
                <div class="col-xs-3 col-xs-push-9">
                    @Html.ActionLink("My tasks", "Index", "ProjectTasks", new { projectid = Model.project.ProjectId, user = @Html.Action("GetUser", new { projectid = Model.project.ProjectId }) }, new { @class = "btn btn-success" })
                </div>
            }
        </div>
        <hr />
        <div class="task-container-pk">

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.CreatedOn)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.CreatedOn)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.StartDate)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.StartDate)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.EndDate)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.EndDate)
                </div>
            </div>
        </div>


        <div class="task-container-pk">

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.Budget)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.Budget)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.Team)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.Team)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.TotalEstimate)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.TotalEstimate)
                </div>
            </div>

        </div>

        <div class="task-container-pk">

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.CreatedBy)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.CreatedBy)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.HeadOfProject)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.HeadOfProject)
                </div>
            </div>

        </div>

    </div>

    <hr />
    <h1>Developers</h1>
    @if (Html.Action("CanManageProject", new { projectid = Model.project.ProjectId }).ToString().Equals("1"))
    {
        <div class="text-right">
            <a href="" class="btn btn-default btn-rounded mb-4" data-toggle="modal" data-target="#modalReportForm">
                Assign User
            </a>
        </div>
    }

    @if (Model.users != null)
    {

        foreach (var user in Model.users)
        {
            <div class="row projecttask-line">
                <div class="col-xs-6 hover-element-pk">
                    @if (Html.Action("AmILead", new { projectid = Model.project.ProjectId, user = user }).ToString().Equals("1"))
                    {<img src="~/Content/Images/TeamLead.png" />}
                    @user
                </div>
                <div class="col-xs-6">
                    @Html.ActionLink("Tasks", "Index", "ProjectTasks", new { projectid = Model.project.ProjectId, user = user }, new { @class = "btn btn-sm btn-success", @style = "border-radius:15px;" })
                    @if (Html.Action("AmILead", new { projectid = Model.project.ProjectId, user = user }).ToString().Equals("1"))
                    {
                        <div class="btn btn-sm btn-danger" onclick="Unassign('@user')" style="border-radius:15px;">Unassign</div>
                    }
                </div>
            </div>
        }

    }
    <div class="modal fade" id="modalReportForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Assign new user</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body mx-3">
                    <div class="md-form mb-4 projecttask-line">
                        <label data-error="wrong" data-success="right" for="defaultForm-date">User</label>
                        @Html.DropDownList("UsersToAssign", null, htmlAttributes: new { @class = "form-control", id = "usertoassign" })
                    </div>

                    <div class="md-form mb-4 projecttask-line">
                        <label data-error="wrong" data-success="right" for="defaultForm-comment">Is Lead?</label><br />
                        <input type="radio" name="radname" id="yeslead" />
                    </div>

                    <div class="md-form mb-4 projecttask-line">
                        <label data-error="wrong" data-success="right" for="defaultForm-hours">TeamLead</label>
                        @Html.DropDownList("TeamLeads", null, htmlAttributes: new { @class = "form-control", id = "teamlead" })
                    </div>

                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-default" onclick="Assign();">Assign</button>
                </div>
            </div>
        </div>
    </div>


    <script type="text/javascript">
        function Assign() {

            let user = {
                Name: $("#usertoassign").children("option:selected").val(),
                ProjectId: @Model.project.ProjectId,
                isLead: $("input[id='yeslead']").is(':checked') ? true : false,
                TeamLead: $("#teamlead").children("option:selected").val()
            }

            $.post({
                url: "/Account/AssignUser",
                contentType: "application/json",
                data: JSON.stringify(user),
                success: function () { alert("success"); location.reload(); },
                dataType: "json"
            });
        }

        function Unassign(userr) {

            $.post({
                url: "/Account/UnassignUser/",
                data: { user: userr, projectid: @Model.project.ProjectId},
                dataType: "application/json",
                success: function () {
                    alert("success");
                    location.reload();
                },
                error: function () { alert("fail");}
            });

        }
    </script>

}


@*<div class="modal fade" id="modalReportForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100 font-weight-bold">Report document</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body mx-3">
                        <div class="md-form mb-4">
                            <label data-error="wrong" data-success="right" for="defaultForm-date">Date</label>
                            <input type="date" id="defaultForm-date" class="form-control validate">
                        </div>

                        <div class="md-form mb-4">
                            <label data-error="wrong" data-success="right" for="defaultForm-hours">Time</label>
                            <input type="number" min="0" max="8" id="defaultForm-time" class="form-control validate">
                        </div>

                        <div class="md-form mb-4">
                            <label data-error="wrong" data-success="right" for="defaultForm-comment">Comment</label>
                            <input type="text" id="defaultForm-comment" class="form-control validate">
                        </div>

                    </div>
                    <div class="modal-footer d-flex justify-content-center">
                        <button class="btn btn-default" onclick="Report();">Send</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center">
            <a href="" class="btn btn-default btn-rounded mb-4" data-toggle="modal" data-target="#modalReportForm">
                New Report
            </a>
        </div>
    }*@

@*<div class="task-div-pk">
            @if (Model.project.Backlogs != null)
            {
                <table class="table" style="font-size:12px; width:90%; margin-left:8%;">

                    @foreach (var backlog in Model.project.Backlogs)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(@backlog.BacklogDescription, "Details", "Backlogs", new { @id = backlog.BacklogId }, null)
                            </td>
                            <td>
                                @backlog.CreatedOn
                            </td>
                            <td>
                                @backlog.CreatedBy
                            </td>
                            Backlog Estimates
                            <td>
                                @{ int totalDone = 0;
                                    foreach (var task in backlog.Tasks)
                                    {
                                        if (task.HoursDone != null)
                                        {
                                            totalDone += task.HoursDone.Value;
                                        }
                                    }
                                }
                                @totalDone
                            </td>
                        </tr>
                    }

                </table>

            }
            <div class="add-div-pk">@Html.ActionLink("+", "Create", "Backlogs", new { @projectId = Model.project.ProjectId }, new { @class = "btn-add-pk" })</div>
        </div>
    }*@
