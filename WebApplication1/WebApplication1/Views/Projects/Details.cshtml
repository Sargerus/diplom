@model WebApplication1.ViewModel.ProjectViewModel

@{
    ViewBag.Title = "Details";
}

@section Body{
    <div>
        <div class="project-label-pk row" style="margin-left:0; margin-right:0;">
            <div class="col-sm-6 col-md-6">
                @Html.DisplayFor(model => Model.project.ProjectDescription)
            </div>
            <div class="col-sm-6 col-md-6 text-right" style="padding-right:0;">
                @Html.ActionLink("Delete", "Delete", new { @id = Model.project.ProjectId }, new { @class = "btn btn-danger", @style = "border-radius:15px;" })
                @Html.ActionLink("Back to projects", "Index", null, new { @class = "btn btn-success", @style = "border-radius:15px;" })
            </div>
        </div>
    </div>

    <br />
    <div class="row" style="margin-left:0; margin-right:0;">

        <div class="col-sm-4 text-left" style="font-size:130%;">
            <b>Role:&nbsp;</b>@Html.Action("DefineMyRole", new { projectid = Model.project.ProjectId })
        </div>

        <div class="col-sm-4 text-center">
        </div>

        <div class="col-sm-4 text-right" style="padding-right:0">
            @Html.ActionLink("My tasks", "Index", "ProjectTasks", new { projectid = Model.project.ProjectId, user = @Html.Action("GetUser", new { projectid = Model.project.ProjectId }) }, new { @class = "btn btn-success", @style = "border-radius:15px;" })
        </div>

    </div>

    <hr />

    <div class="text-center">
        <a data-toggle="collapse" href="#descriptionId" aria-expanded="false" aria-controls="collapseExample">
            Show description
        </a>

        <div class="collapse text-justify" style="word-wrap:break-word;margin-bottom:.6em;margin-top:.6em;" id="descriptionId">
            @Model.project.LongDescription
        </div>

    </div>

    <hr />

    <div>
        @if (Html.Action("CanManageProject", new { projectid = Model.project.ProjectId }).ToString().Equals("1"))
        {
            <div class="text-right" style="padding-right:.5em;">
                @Html.ActionLink("Stats", "IndexProjectStat", "ProjectTasks", new { @projectid = Model.project.ProjectId }, new { @class = "btn btn-default", @style = "border-radius:15px;" })
                @Html.ActionLink("Change", "Edit", new { @id = Model.project.ProjectId }, new { @class = "btn btn-default", @style = "border-radius:15px;" })
            </div>
        }

        <div class="task-container-pk">

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.CreatedOn)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.CreatedOn)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.StartDate)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.StartDate)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.EndDate)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.EndDate)
                </div>
            </div>
        </div>


        <div class="task-container-pk">

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.Budget)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.Budget)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.Team)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.Team)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.TotalEstimate)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.TotalEstimate)
                </div>
            </div>

        </div>

        <div class="task-container-pk">

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.CreatedBy)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.CreatedBy)
                </div>
            </div>

            <div class="div-property">
                <div class="property-header">
                    @Html.DisplayNameFor(model => Model.project.HeadOfProject)
                </div>
                <div class="property">
                    @Html.DisplayFor(model => Model.project.HeadOfProject)
                </div>
            </div>

        </div>

    </div>

    <hr />

    <div class="reports-table-header-pk row">

        <div class="col-sm-6 text-left">
            Team
        </div>

        <div class="col-sm-6 text-right">
            @if (Html.Action("CanManageProject", new { projectid = Model.project.ProjectId }).ToString().Equals("1"))
            {
                <div class="text-right">
                    <a href="" class="btn btn-default mb-4" data-toggle="modal" data-target="#modalReportForm" style="border-radius:15px;">
                        Assign User
                    </a>
                </div>
            }
        </div>

    </div>

    <br />

    @if (Model.users != null)
    {

        foreach (var user in Model.users)
        {
            //var rolepadding = Html.Action("DefineRolePadding", new { projectid = Model.project.ProjectId, user = user }).ToString();

            <div class="row projecttask-line" style="margin-left:0; margin-right:0;">
                <div class="col-xs-2 hover-element-pk text-left" style="font-weight:bold;">
                    @user
                </div>
                <div class="col-xs-6 hover-element-pk text-left">
                    @Html.Action("DefineMyRole", new { projectid = Model.project.ProjectId, user = user })
                </div>
                <div class="col-xs-4 text-right">
                    @if (Html.Action("CanManageProject", new { projectid = Model.project.ProjectId }).ToString().Equals("1"))
                    {
                        if (!user.Equals(Utility.User))
                        {
                            @*<div class="task-container-pk text-right">*@
                            @*<div class="dropdown flex-item-small-pk">*@
                            <button class="btn btn-warning btn-sm dropdown-toggle" type="button" data-toggle="dropdown" style="border-radius:15px;">
                                Change
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a href="#" data-toggle="modal" onclick="SetUserToReassign('@user')" data-target="#modalReassignForm">Change Team Lead</a></li>
                                <li><a href="#" onclick="Unassign('@user')">Unnasign</a></li>
                            </ul>
                            @*</div>*@
                            @*<div class="flex-item-small-pk" style="margin-left:0;">*@

                            @*</div>*@
                            @*</div>*@
                            @*if (!Html.Action("AmILead", new { projectid = Model.project.ProjectId, user = user }).ToString().Equals("1"))
                                {
                                    <a href="" class="btn btn-warning btn-sm mb-4" style="border-radius:15px;" data-toggle="modal" onclick="SetUserToReassign('@user')" data-target="#modalReassignForm">
                                        Reassign
                                    </a>
                                }
                                <div class="btn btn-sm btn-danger" onclick="Unassign('@user')" style="border-radius:15px;">Unassign</div>*@
                        }
                        @Html.ActionLink("Tasks", "Index", "ProjectTasks", new { projectid = Model.project.ProjectId, user = user }, new { @class = "btn btn-sm btn-success", @style = "border-radius:15px;" })
                    }

                </div>
            </div>
        }

    }
    <div class="modal fade" id="modalReportForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Assign new user</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body mx-3">
                    <div class="md-form mb-4 projecttask-line">
                        <label data-error="wrong" data-success="right" for="defaultForm-date">User</label>
                        @*@Html.DropDownList("UsersToAssign", null, htmlAttributes: new { @class = "form-control", id = "usertoassign" })*@
                        <input id="usertoassign" class="form-control" placeholder="type at least 3 characters" class="ui-widget" />
                    </div>

                    <div class="md-form mb-4 projecttask-line">

                        <input type="radio" name="checkname" id="yeslead" value="1" onclick="CheckLeadField();" />
                        <label data-error="wrong" data-success="right" for="defaultForm-comment">Team Lead</label><br />

                        <input type="radio" name="checkname" id="yesmanager" value="2" onclick="CheckLeadField();" />
                        <label data-error="wrong" data-success="right" for="defaultForm-comment">Manager</label><br />

                        <input type="radio" name="checkname" id="yesdeveloper" value="0" onclick="CheckLeadField();" />
                        <label data-error="wrong" data-success="right" for="defaultForm-comment">Developer</label><br />

                    </div>

                    <div class="md-form mb-4 projecttask-line">
                        <label data-error="wrong" data-success="right" for="defaultForm-hours">TeamLead</label>
                        @Html.DropDownList("TeamLeads", null, htmlAttributes: new { @class = "form-control", id = "teamlead" })
                    </div>

                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-default" onclick="Assign();">Assign</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalReassignForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Ressign user to Team Lead</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body mx-3">
                    <div class="md-form mb-4 projecttask-line">
                        <label data-error="wrong" data-success="right" for="defaultForm-date">Select new team lead</label>
                        @Html.DropDownList("TeamLeads", null, htmlAttributes: new { @class = "form-control", id = "reassignteamlead" })
                    </div>
                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-default" onclick="Reassign();">Reassign</button>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">

        var usersArray = [];
        var nameofusertoreassign = "";

               @foreach(var user in Model.usersToAssign)
               {
                   @:usersArray.push("@user");
               };

                $("#usertoassign").autocomplete({
                    source: usersArray,
                    minLength: 3
        });

        function SetUserToReassign(user) {
            nameofusertoreassign = user;
        }


        function CheckLeadField() {
            var role = $("input[name='checkname']:checked").val();
            let field = document.getElementById('teamlead');

            if (role == "0") {
                $("#teamlead").prop('disabled', false);
            } else {
                $("#teamlead").prop('disabled', true);
                $("#teamlead").val("");
            }
            //if (role=="0" || role== field.getAttribute('disabled') == 'false' || field.getAttribute('disabled') === null)
            //{
            //    $("#teamlead").prop('disabled', true);
            //    $("#teamlead").val("");
            //}
            //else {
            //    $("#teamlead").prop('disabled', false);
            //}


        }

        function Assign() {

                        let user = {
                Name: $("#usertoassign").val(),
                ProjectId: @Model.project.ProjectId,
                //isLead: $("input[id='yeslead']").is(':checked') ? true : false,
                //isManager: $("input[id='yesmanager']").is(':checked') ? true : false,
                TeamLead: $("#teamlead").children("option:selected").val()
            }

            var role = $("input[name='checkname']:checked").val();
            switch (role) {
                case "0": user.isDev = true; break;
                case "1": user.isLead = true; break;
                case "2": user.isManager = true; break;
            }
            
            $.post({
                url: "/Account/AssignUser",
                contentType: "application/json",
                data: JSON.stringify(user),
                success: function () { location.reload(); },
                error: function (data) { alert("User" + data.User + "was not assigned to project. Please try again"); },
                dataType: "json"
            });
        }

        function Unassign(userr) {

            $.post({
                url: "/Account/UnassignUser/",
                data: { user: userr, projectid: @Model.project.ProjectId},
                dataType: "application/json",
                success: function () { location.reload(); },
                error: function () { alert("fail"); },
                dataType: "json"
            });

        }

        function Reassign() {
            var newteamlead = $("#reassignteamlead").children("option:selected").val();

            $.post({
                url: "/Account/ReassignUser",
                data: { TeamLead: newteamlead, user : nameofusertoreassign, projectid : @Model.project.ProjectId },
                success: function () { location.reload(); },
                error: function (data) { alert("User" + data.User + "was not reassigned to new team lead. Please try again"); },
                dataType: "json"
            });
        }
    </script>

}


@*<div class="modal fade" id="modalReportForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h4 class="modal-title w-100 font-weight-bold">Report document</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body mx-3">
                        <div class="md-form mb-4">
                            <label data-error="wrong" data-success="right" for="defaultForm-date">Date</label>
                            <input type="date" id="defaultForm-date" class="form-control validate">
                        </div>

                        <div class="md-form mb-4">
                            <label data-error="wrong" data-success="right" for="defaultForm-hours">Time</label>
                            <input type="number" min="0" max="8" id="defaultForm-time" class="form-control validate">
                        </div>

                        <div class="md-form mb-4">
                            <label data-error="wrong" data-success="right" for="defaultForm-comment">Comment</label>
                            <input type="text" id="defaultForm-comment" class="form-control validate">
                        </div>

                    </div>
                    <div class="modal-footer d-flex justify-content-center">
                        <button class="btn btn-default" onclick="Report();">Send</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center">
            <a href="" class="btn btn-default btn-rounded mb-4" data-toggle="modal" data-target="#modalReportForm">
                New Report
            </a>
        </div>
    }*@

@*<div class="task-div-pk">
            @if (Model.project.Backlogs != null)
            {
                <table class="table" style="font-size:12px; width:90%; margin-left:8%;">

                    @foreach (var backlog in Model.project.Backlogs)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(@backlog.BacklogDescription, "Details", "Backlogs", new { @id = backlog.BacklogId }, null)
                            </td>
                            <td>
                                @backlog.CreatedOn
                            </td>
                            <td>
                                @backlog.CreatedBy
                            </td>
                            Backlog Estimates
                            <td>
                                @{ int totalDone = 0;
                                    foreach (var task in backlog.Tasks)
                                    {
                                        if (task.HoursDone != null)
                                        {
                                            totalDone += task.HoursDone.Value;
                                        }
                                    }
                                }
                                @totalDone
                            </td>
                        </tr>
                    }

                </table>

            }
            <div class="add-div-pk">@Html.ActionLink("+", "Create", "Backlogs", new { @projectId = Model.project.ProjectId }, new { @class = "btn-add-pk" })</div>
        </div>
    }*@
