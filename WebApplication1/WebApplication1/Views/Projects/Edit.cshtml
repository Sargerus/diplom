@model WebApplication1.Models.Project

@{
    ViewBag.Title = "Edit";
}

@section Body{
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Project</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.HeadOfProject)
    @Html.HiddenFor(model => model.CreatedOn)

    <div class="form-group">
        @Html.LabelFor(model => model.ProjectDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.LongDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.HeadOfProject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HeadOfProject, new { htmlAttributes = new { @class = "form-control", @id= "usertoassign" } })
            @Html.ValidationMessageFor(model => model.HeadOfProject, "", new { @class = "text-danger" })
            <span id="managers"></span>
        </div>
    </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.HeadOfProject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HeadOfProject, (IEnumerable<SelectListItem>)ViewBag.Users2, "")
                @Html.ValidationMessageFor(model => model.HeadOfProject, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <script type="text/javascript">
        document.getElementById("LongDescription").setAttribute("cols", "200");
        document.getElementById("LongDescription").setAttribute("rows", "5");

        @*$("#document").ready(function () {

            var count = 0;
            $("#usertoassign").val("@Model.HeadOfProject");
                @Model.HeadOfProject = 
                var usersArray = [];
               @foreach(var user in ViewBag.usersToAssign)
               {
                   @:count = count + 1;
                   @:usersArray.push("@user");
               };

                $("#usertoassign").autocomplete({
                    source: usersArray,
                    minLength: 3
            });

            if (count <= 1) {
                $("#managers").text("No more managers on this project");
                $("#managers").prop("style", "color:red");
                $("#usertoassign").prop("disabled", "true");
            }
        })*@


    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
